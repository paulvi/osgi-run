//nested-jars example, based on quartz-sample
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.dm.gradle:gradle-bundle-plugin:0.8.2'
    }
}

apply plugin: 'java'
apply plugin: 'org.dm.bundle'
apply plugin: 'com.athaydes.osgi-run'

dependencies {
    compile 'org.osgi:org.osgi.core:4.3.1'
    compile "org.quartz-scheduler:quartz:2.2.1"

    // required as Quartz uses slf4j-api
    osgiRuntime 'org.slf4j:slf4j-simple:1.6.6'

    // un-comment if log4j gets actually used by the Quartz bundle
    //osgiRuntime "org.slf4j:log4j-over-slf4j:1.7.5"
}

bundle {
    instruction 'Export-Package', '*'
    trace = true
}

repositories {
    mavenLocal()
    mavenCentral()
}
afterEvaluate { project ->
    project.jar.doLast {
        project.jar.manifest.writeTo( project.file( 'generated-sources/MANIFEST.MF' ) )
    }
}

runOsgi {
    bundles += project

    wrapInstructions {
        // use regex to match file name of dependency
        manifest( "c3p0.*" ) {
            // import everything except the log4j package - should not be needed
            instruction 'Import-Package', '!org.apache.log4j', '*'
            instruction 'Bundle-Description', 'c3p0 is an easy-to-use library for making traditional ' +
                    'JDBC drivers "enterprise-ready" by augmenting them with functionality defined by ' +
                    'the jdbc3 spec and the optional extensions to jdbc2.'
        }
    }
}
